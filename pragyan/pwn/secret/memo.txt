_x1c = 0
setvbuf()
_x14 = malloc(0x50)
_x10 = _x14
_x10 += 0x50
_x18 = 1

if _x18 <= 9
	malloc(0x50)
	_x18++

_x18 = 0
for _x18 <= 9
	edx = _x18*0x50
	memset(_x14+edx, 0, 0x50)
	_x18++

printf(menu)
scanf("%d", &_x1c)

1:create
	create_task(_x14)
		_x14 = arg1
		_x10 = 0
		while [_x14+0x4c] != 0:
			if _x10 <= 9
				_x14 += 0x50
				_x10++
		[_x14+4] = malloc(0xb)
		printf("enter name:")
		scanf("%s",_x14+8)

		printf("enter date:")
		scanf("%s", [_x14+4])

		printf("enter length of description:")
		scanf("%d",_x14+0x48)

		[_x14] = malloc([_x14+0x48])
		
		getchar() // for \n
		_xc = 0
		edx = [_x14+0x48]
		eax = _xc
		while edx > _xc
			_x15 = getchar()
			if _x15 == \n
				break
			[[_x14]+_xc] = _x15
			_xc++
		[_x14+0x4c] = 1

2:remove
	remove_task(_x14)
		_x5c = arg1
		_x54 = _x5c
		printf("enter name to remove")
		scanf("%64s", &_x4c)
		_x50 = 0
		while _x50 <= 9:
			if strcmp(&_x4c, _x54+8)
				break
			_x54 += 0x50
			_x50 ++
3:display
	display_tasks(_x14)
4:

